name: Build and Test

on: push

env:
  ELIXIR_VERSION: 1.10.2
  MIX_ENV: test
  OTP_VERSION: 22.2

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.8
        ports:
          - 5672/tcp

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Elixir v${{ env.ELIXIR_VERSION }}-otp-${{ env.OTP_VERSION }}
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache Dependencies
        uses: actions/cache@v1
        id: cache-deps
        with:
          path: deps
          key: deps-${{ env.MIX_ENV }}-v${{ env.ELIXIR_VERSION }}-otp-${{ env.OTP_VERSION }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            deps-${{ env.MIX_ENV }}-v${{ env.ELIXIR_VERSION }}-otp-${{ env.OTP_VERSION }}-

      - name: Cache Dialyzer PLTs
        uses: actions/cache@v1
        with:
          path: priv/plts
          key: plts-v${{ env.ELIXIR_VERSION }}-otp-${{ env.OTP_VERSION }}-${{ github.sha }}
          restore-keys: |
            plts-v${{ env.ELIXIR_VERSION }}-otp-${{ env.OTP_VERSION }}-

      - name: Get Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Check Source Code Formatting
        run: mix format --check-formatted

      - name: Run Tests
        env:
          AMQP_PORT: ${{ job.services.rabbitmq.ports[5672] }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github --include integration

      - name: Run Dialyzer
        run: mix dialyzer
